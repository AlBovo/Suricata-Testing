services:
  suricata:
    build: .
    container_name: suricata
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - SYS_NICE
    volumes:
      - ./suricata.yaml:/etc/suricata/suricata.yaml:ro
      - ./suricata-logs:/var/log/suricata
    sysctls:
      net.ipv4.conf.all.forwarding: "1"
    networks:
      net1:
        ipv4_address: 192.168.7.254
      net2:
        ipv4_address: 192.168.8.254

  logstash:
    image: docker.elastic.co/logstash/logstash:9.0.0
    container_name: logstash
    restart: unless-stopped
    volumes:
      - ./suricata-logs:/var/log/suricata
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    depends_on:
      - elasticsearch

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.0.0
    container_name: elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
    mem_limit: 2g # it keeps exploding

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
     - '3000:3000'
    depends_on:
      - elasticsearch

  service1:
    build: ./services/1/
    container_name: service1
    cap_add:
      - NET_ADMIN
    environment:
      - PORT=8080
    networks:
      net1:
        ipv4_address: 192.168.7.69
    depends_on:
      - suricata
  service2:
    build: ./services/2/
    container_name: service2
    cap_add:
      - NET_ADMIN
    environment:
      - PORT=8080
    networks:
      net2:
        ipv4_address: 192.168.8.69

volumes:
  suricata-logs: 

networks:
  net1:
    ipam:
      config:
        - subnet: 192.168.7.0/24
  net2:
    ipam:
      config:
        - subnet: 192.168.8.0/24
